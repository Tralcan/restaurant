
// This file is generated by Gemini. For more information, see the LICENSE
'use server';
/**
 * @fileOverview Este archivo define un flujo de Genkit para obtener sub-cocinas para un tipo de cocina dado.
 *
 * - getSubCuisines - Una función que llama a getSubCuisinesFlow y devuelve una lista de sub-cocinas.
 * - GetSubCuisinesInput - El tipo de entrada para la función getSubCuisines.
 * - GetSubCuisinesOutput - El tipo de salida para la función getSubCuisines.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

const GetSubCuisinesInputSchema = z.object({
  cuisine: z.string().describe('El tipo de cocina principal (ej., Italiana).'),
});
export type GetSubCuisinesInput = z.infer<typeof GetSubCuisinesInputSchema>;

const GetSubCuisinesOutputSchema = z.object({
  subCuisines: z
    .array(z.string())
    .describe('Una lista de sub-cocinas generadas dinámicamente (ej., pizza, pasta, risotto).'),
});
export type GetSubCuisinesOutput = z.infer<typeof GetSubCuisinesOutputSchema>;

export async function getSubCuisines(input: GetSubCuisinesInput): Promise<GetSubCuisinesOutput> {
  return getSubCuisinesFlow(input);
}

const getSubCuisinesPrompt = ai.definePrompt({
  name: 'getSubCuisinesPrompt',
  input: {schema: GetSubCuisinesInputSchema},
  output: {schema: GetSubCuisinesOutputSchema},
  prompt: `Eres un asistente útil que sugiere sub-cocinas para un tipo de cocina dado.

  Sugiere una lista de sub-cocinas para el siguiente tipo de cocina:

  {{cuisine}}

  Devuelve las sub-cocinas como un arreglo JSON de cadenas de texto.`,
});

const getSubCuisinesFlow = ai.defineFlow(
  {
    name: 'getSubCuisinesFlow',
    inputSchema: GetSubCuisinesInputSchema,
    outputSchema: GetSubCuisinesOutputSchema,
  },
  async input => {
    const {output} = await getSubCuisinesPrompt(input);
    return output!;
  }
);
